name: Release the package on merge into main

# Only trigger when a pull request into main branch is closed.
on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  tests:
    if: "github.event.pull_request.merged == true"
    runs-on: ubuntu-latest
    env:
      USING_COVERAGE: '3.8'
    strategy:
      matrix:
        python: [ 3.8 ]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Install tox
        run: pip install tox
      - name: Run tests
        run: tox
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: coverage.xml
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs: tests
    steps:
    - uses: actions/checkout@v2
    - name: Get package version
      run: echo "PACKAGE_VERSION=$(python setup.py --version)" >> $GITHUB_ENV
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, no need to create your own.
      with:
        tag_name: ${{ env.PACKAGE_VERSION }}
        release_name: ${{ github.event.pull_request.title }}
        body: ${{ github.event.pull_request.body }}
        draft: false
        prerelease: false

  docker:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get package version
        run: echo "PACKAGE_VERSION=$(python setup.py --version)" >> $GITHUB_ENV

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3.1.1
        with:
          context: ./check-semantic-version
          push: true
          tags: octue/check-semantic-version:${{ env.PACKAGE_VERSION }},octue/check-semantic-version:latest
