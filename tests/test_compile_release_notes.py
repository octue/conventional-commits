import unittest
from unittest.mock import patch

from conventional_commits.compile_release_notes import ReleaseNoteCompiler


MOCK_GIT_LOG = """REF: Merge commit message checker modules| (HEAD -> refactor/test-release-notes-generator, origin/refactor/test-release-notes-generator)
MRG: Merge pull request #3 from octue/feature/add-other-conventional-commit-ci-components|
CHO: Remove hook installation from branch| (tag: 0.0.3, origin/main, origin/HEAD, main)
ENH: Support getting versions from poetry and npm|
FIX: Fix semantic version script; add missing config|
OPS: Add continuous deployment CI workflows|
OPS: Add check-semantic-version entrypoint|
OPS: Add compile-release-notes entrypoint|
FEA: Add semantic version checker and realease note compiler|
REF: Rename module|
REF: Rename repository to conventional-commits|
OPS: Use version 0.0.2 of hook when developing|
DOC: Add hook installation instructions to README|
DOC: Add code coverage and style badges to README|
TST: Rename test methods| (tag: 0.0.2)
DEP: Add missing dependency|
OPS: Fix test command in tox.ini|
OPS: Fix coverage/tox configuration|
DOC: Put default commit codes in collapsible section in README|
"""


class TestReleaseNoteCompiler(unittest.TestCase):
    def test_unsupported_stop_point_results_in_error(self):
        """Test that using an unsupported stop point results in a ValueError."""
        with self.assertRaises(ValueError):
            ReleaseNoteCompiler(stop_point="blah")

    def test_last_release_stop_point(self):
        """Test generating release notes stopping at the last release."""
        with patch(
            "conventional_commits.compile_release_notes.ReleaseNoteCompiler._get_git_log", return_value=MOCK_GIT_LOG
        ):
            release_notes = ReleaseNoteCompiler(stop_point="LAST_RELEASE").compile_release_notes()

            expected = "\n".join(
                [
                    "<!--- START AUTOGENERATED NOTES --->",
                    "## Contents",
                    "",
                    "### Refactoring",
                    "- [x] Merge commit message checker modules",
                    "",
                    "### Other",
                    "- [x] Merge pull request #3 from octue/feature/add-other-conventional-commit-ci-components",
                    "",
                    "<!--- END AUTOGENERATED NOTES --->",
                ]
            )

            self.assertEqual(release_notes, expected)

    def test_last_pull_request_stop_point(self):
        """Test generating release notes stopping at the last pull request merge."""
        with patch(
            "conventional_commits.compile_release_notes.ReleaseNoteCompiler._get_git_log", return_value=MOCK_GIT_LOG
        ):
            release_notes = ReleaseNoteCompiler(stop_point="LAST_PULL_REQUEST").compile_release_notes()

            expected = "\n".join(
                [
                    "<!--- START AUTOGENERATED NOTES --->",
                    "## Contents",
                    "",
                    "### Refactoring",
                    "- [x] Merge commit message checker modules",
                    "",
                    "<!--- END AUTOGENERATED NOTES --->",
                ]
            )

            self.assertEqual(release_notes, expected)
